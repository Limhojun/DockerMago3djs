 * 해야 할 목록

서울시에서 받은 3DS로된 지하철역 모델도 해당 위치에 넣었으면 합니다.
여의도는 DEM이 좋지 않아 BIM 모델을 두기에 좋은 곳 같지 않습니다. 
적당히 평평한 곳을 골라서 그곳에 각종 BIM 모델을 두고 가상의 도시를 하나 만들면 좋겠습니다. 
해당 지역의 고해상도 항공영상은 요즘 국토지리정보원에서 제공하니 그곳에서 다운로드 받아 GeoServer로 서비스하는 걸 고려해 봅시다.
데모 페이지에 현재와 같은 단순 데모 뿐만 아니라 API 테스트를 위한 데모 페이지도 필요하겠다 싶었습니다.
사업 모델로 보자면, 이미 많은 회사들이 삼성중공업처럼 3차원 설계 파일을 이용한 PLM(Product Lifecycle Management)을 하고 있더군요. 
그런데, 웹이 안되고 특정 SW만 있어야 해서 어려움이 많은 모양입니다. 
우리는 그런 곳에 우리 솔루션을 끼워넣으면 작동하는 방식의 블랙박스 모델 혹은 Private Cloud 모델을 고려해야 하지 않나 싶었습니다.


1 디랙토리 구조
 1) 3d_data
  - f4d 데이터를 저장. 용량이 커서 git에 올리는 sample data는 작은걸로 만들고 운영환경에서는 실데이터로 교체해야 함
 2) build
  - gulp minify javascript 저장. git 관리하지 않음
 3) sample
  - 예제 파일
 4) external
  - jasmine 과 같은 javascript library를 저장
 6) node_modules
  - node 의존 library 관리. git 관리 하지 않음
 7) src
  - engine custmizing source
  - mago3d plugin source
 8) test
  - jasmine test 소스

2 테스트 프레임워크
 - jasmine 을 가지고 웹 브라우저 없이 maven 처럼 gulp 빌드시 테스트 코드를 전체 실행할 수 있는 방법을 모르겠다.
 - karma testrunner
 
3 웹 서버
 - cesium 이 웹서버가 꼭 필요 하다.
   node express 로 가야 할지 apache로 가야 할지.... 어느것 하나 편하지가 않다.
 - 우선은 apache lounge
 
4 javascript doc
 - jsdoc 
 - https://github.com/jsdoc3/jsdoc
 - http://usejsdoc.org/

5 docker
 
6 api 는 기본 세개 정도는 만들어야 함
 - load
 - 하이라이팅
 - 움직이는거

7 web workers